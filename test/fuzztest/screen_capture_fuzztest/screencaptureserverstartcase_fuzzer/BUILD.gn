# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//build/config/features.gni")
import("//build/test.gni")
import("//foundation/multimedia/player_framework/config.gni")
MEDIA_ROOT_DIR = "//foundation/multimedia/player_framework/"

##############################fuzztest##########################################
ohos_fuzztest("ScreenCaptureServerStartCaseFuzzTest") {
  module_out_path = "$MODULE_OUTPUT_PATH/screen_capture"
  fuzz_config_file = "$MEDIA_ROOT_DIR/test/fuzztest/screen_capture_fuzztest/screencaptureserverstartcase_fuzzer"
  resource_config_file = "$MEDIA_ROOT_DIR/test/fuzztest/resource/ohos_test.xml"

  include_dirs = [
    "./",
    "$MEDIA_ROOT_DIR/interfaces/inner_api/native",
    "$MEDIA_ROOT_DIR/services/services/sa_media/ipc",
    "$MEDIA_ROOT_DIR/services/services/sa_media/server",
    "$MEDIA_ROOT_DIR/services/services/sa_media/server_manager",
    "$MEDIA_ROOT_DIR/services/services/common",
    "$MEDIA_ROOT_DIR/services/services/include",
    "$MEDIA_ROOT_DIR/services/services/player/ipc",
    "$MEDIA_ROOT_DIR/services/services/player/player_mem_manage",
    "$MEDIA_ROOT_DIR/services/services/player/server",
    "$MEDIA_ROOT_DIR/services/services/player/subscriber",
    "$MEDIA_ROOT_DIR/services/services/media_data_source/ipc",
    "$MEDIA_ROOT_DIR/services/services/media_data_source/server",
    "$MEDIA_ROOT_DIR/services/services/monitor/client",
    "$MEDIA_ROOT_DIR/services/services/monitor/ipc",
    "$MEDIA_ROOT_DIR/services/services/monitor/server",
    "$MEDIA_ROOT_DIR/services/services/recorder/ipc",
    "$MEDIA_ROOT_DIR/services/services/recorder/server",
    "$MEDIA_ROOT_DIR/services/services/avmetadatahelper/ipc",
    "$MEDIA_ROOT_DIR/services/services/avmetadatahelper/server",
    "avcodec/ipc",
    "avcodec/server",
    "avcodeclist/ipc",
    "avcodeclist/server",
    "$MEDIA_ROOT_DIR/services/services/recorder_profiles/ipc",
    "$MEDIA_ROOT_DIR/services/services/recorder_profiles/server",
    "$MEDIA_ROOT_DIR/services/services/screen_capture/server",
    "$MEDIA_ROOT_DIR/services/services/screen_capture/ipc",
    "$MEDIA_ROOT_DIR/services/services/screen_capture_monitor/server",
    "$MEDIA_ROOT_DIR/services/services/screen_capture_monitor/ipc",
    "$MEDIA_ROOT_DIR/services/services/transcoder/server",
    "$MEDIA_ROOT_DIR/services/services/transcoder/ipc",
    "$MEDIA_ROOT_DIR/services/services/observer",
    "$MEDIA_ROOT_DIR/services/include",
    "$MEDIA_ROOT_DIR/services/services/factory",
    "$MEDIA_ROOT_DIR/services/services/engine_intf",
    "$MEDIA_ROOT_DIR/services/utils/include",
    "$MEDIA_ROOT_DIR/interfaces/inner_api/native",
    "$MEDIA_ROOT_DIR/services/services/common",
    "$MEDIA_ROOT_DIR/services/engine/common/recorder_profiles",
    "$MEDIA_ROOT_DIR/test/fuzztest/common/",
    "$MEDIA_ROOT_DIR/test/unittest/common/include",
    "$MEDIA_ROOT_DIR/test/unittest/screen_capture_test/screen_capture_service_function_unittest/server/include",
    "$MEDIA_PLAYER_GRAPHIC_SURFACE/interfaces/inner_api/surface",
    "$MEDIA_PLAYER_GRAPHIC/interfaces/innerkits/surface",
    "$MEDIA_ROOT_DIR/../media_foundation/interface/inner_api",
    "$MEDIA_ROOT_DIR/../media_foundation/interface/inner_api/common",
  ]
  cflags = [
    "-std=c++17",
    "-fno-rtti",
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-Wshadow",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wdate-time",
    "-Werror",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wunused-parameter",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  if (player_framework_support_screen_capture) {
    sources = [
      "$MEDIA_ROOT_DIR/test/fuzztest/common/test_screen_capture.cpp",
      "screencaptureserverstartcase_fuzzer.cpp",
    ]
  }
  deps = [
    "$MEDIA_PLAYER_GRAPHIC/rosen/modules/render_service_client:librender_service_client",
    "$MEDIA_ROOT_DIR/interfaces/inner_api/native:media_client",
    "$MEDIA_ROOT_DIR/services/services:media_service",
    "$MEDIA_ROOT_DIR/services/utils:media_service_utils",
  ]
  public_deps = [ "$MEDIA_ROOT_DIR/services/services:media_service" ]
  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:app_manager",
    "ability_runtime:data_ability_helper",
    "ability_runtime:mission_info",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libprivacy_sdk",
    "access_token:libtokensetproc_shared",
    "audio_framework:audio_client",
    "av_codec:av_codec_client",
    "c_utils:utils",
    "call_manager:tel_call_manager_api",
    "core_service:tel_core_service_api",
    "distributed_notification_service:ans_innerkits",
    "graphic_surface:surface",
    "graphic_surface:sync_fence",
    "hilog:libhilog",
    "ipc:ipc_single",
    "media_foundation:media_foundation",
    "os_account:os_account_innerkits",
    "player_framework:media_client",
    "qos_manager:qos",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "state_registry:tel_state_registry_api",
    "window_manager:libdm",
  ]
  if (player_framework_support_power_manager) {
    external_deps += [ "power_manager:powermgr_client" ]
  }
  part_name = "player_framework"
}
