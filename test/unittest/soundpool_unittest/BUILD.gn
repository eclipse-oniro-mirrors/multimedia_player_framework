# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/player_framework/config.gni")
import("./../../../multimedia_player_framework_aafwk.gni")

module_output_path = "player_framework/player_framework/soundpool"

ohos_unittest("soundpool_unittest") {
  module_out_path = module_output_path
  include_dirs = [
    "./",
    "${multimedia_player_framework_path}/interfaces/inner_api/native/soundpool/include",
    "${multimedia_player_framework_path}/frameworks/native/soundpool",
    "${multimedia_player_framework_path}/services/services/engine_intf",
    "${multimedia_player_framework_path}/test/unittest/common/include",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  sources = [
    "./audio_renderer_manager_unittest.cpp",
    "./parallel_stream_manager_test.cpp",
    "./sound_id_manager_unittest.cpp",
    "./soundpool_unittest.cpp",
    "./stream_unittest.cpp",
    "./cachebuffer_unittest.cpp",
  ]

  deps = [
    "${multimedia_player_framework_path}/frameworks/native/soundpool:soundpool_client",
    "${multimedia_player_framework_path}/interfaces/inner_api/native:media_client",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "audio_framework:audio_client",
    "audio_framework:audio_renderer",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "ffrt:libffrt",
    "googletest:gmock",
    "graphic_surface:surface",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "qos_manager:qos",
  ]

  if (player_framework_support_drm) {
    external_deps += [ "drm_framework:drm_framework" ]
  }

  resource_config_file = "${multimedia_player_framework_path}/test/unittest/resources/ohos_test.xml"
}
