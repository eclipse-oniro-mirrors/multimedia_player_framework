# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/player_framework/config.gni")

module_output_path = "$MODULE_OUTPUT_PATH/avmetadata"

ohos_unittest("avmetadatahelper_impl_unittest") {
  module_out_path = module_output_path
  include_dirs = [
    "./",
    "//foundation/multimedia/player_framework/interfaces/inner_api/native",
    "//foundation/multimedia/player_framework/services/include",
    "//foundation/multimedia/player_framework/services/services/monitor/ipc",
    "//foundation/multimedia/player_framework/services/utils/include",
    "//foundation/multimedia/player_framework/frameworks/native/avmetadatahelper",
    "//foundation/multimedia/player_framework/frameworks/native/player",
    "//foundation/multimedia/player_framework/test/unittest/common/include",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-Wno-deprecated-declarations",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  cflags_cc = cflags

  if (player_framework_support_metadata) {
    sources = [
      "//foundation/multimedia/player_framework/frameworks/native/avmetadatahelper/avmetadatahelper_impl.cpp",
      "avmetadatahelper_impl_unittest.cpp",
    ]
  }

  deps = [
    "//foundation/multimedia/player_framework/interfaces/inner_api/native:media_client",
    "//foundation/multimedia/player_framework/services/utils:media_service_utils",
  ]

  external_deps = [
    "audio_framework:audio_client",
    "av_codec:av_codec_client",
    "c_utils:utils",
    "drivers_interface_display:display_commontype_idl_headers",
    "googletest:gmock",
    "graphic_2d:librender_service_client",
    "graphic_surface:surface",
    "graphic_surface:sync_fence",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "media_foundation:media_foundation",
    "qos_manager:qos",
    "window_manager:libwm",
  ]

  if (player_framework_support_drm) {
    external_deps += [ "drm_framework:drm_framework" ]
  }

  defines = []
  if (player_framework_check_video_is_hdr_vivid) {
    defines += [ "CHECKING_VIDEO_IS_HDR_VIVID" ]
  }

  subsystem_name = "multimedia"
  part_name = "player_framework"
}
