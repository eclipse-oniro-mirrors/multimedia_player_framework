# Copyright (C) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//build/ohos/taihe_idl/taihe.gni")
import("./../../multimedia_player_framework_aafwk.gni")

subsystem_name = "multimedia"
part_name = "player_framework"
taihe_generated_file_path_media = "$taihe_file_path/out/$subsystem_name/$part_name/media"
taihe_generated_file_path_soundPool = "$taihe_file_path/out/$subsystem_name/$part_name/soundPool"

copy_taihe_idl("copy_media_taihe") {
  sources = [ "//foundation/multimedia/player_framework/frameworks/taihe/idl/ohos.multimedia.media.taihe",
              "//foundation/multimedia/player_framework/frameworks/taihe/idl/ohos.multimedia.media.context.taihe", ]
  deps = [ ":copy_soundpool_taihe" ]
}

ohos_taihe("run_media_taihe") {
  taihe_generated_file_path = "${taihe_generated_file_path_media}"
  deps = [ ":copy_media_taihe" ]
  outputs = [
    "$taihe_generated_file_path/src/ohos.multimedia.media.ani.cpp",
    "$taihe_generated_file_path/src/ohos.multimedia.media.abi.c",
  ]
}

copy_taihe_idl("copy_soundpool_taihe") {
  sources = [ "//foundation/multimedia/player_framework/frameworks/taihe/idl/soundPool.taihe" ]
}

ohos_taihe("run_soundpool_taihe") {
  taihe_generated_file_path = "${taihe_generated_file_path_soundPool}"
  deps = [ ":copy_media_taihe" ]
  outputs = [
    "$taihe_generated_file_path/src/soundPool.ani.cpp",
    "$taihe_generated_file_path/src/soundPool.abi.c",
  ]
}

taihe_shared_library("soundpool_taihe") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  taihe_generated_file_path = "${taihe_generated_file_path_soundPool}"
  subsystem_name = "$subsystem_name"
  part_name = "$part_name"

  include_dirs = [
    "media/include",
    "soundpool/include",
    "${multimedia_player_framework_path}/interfaces/inner_api/native/soundpool/include",
    "${multimedia_player_framework_path}/services/utils/include",
    "${multimedia_player_framework_path}/interfaces/inner_api/native/",
  ]

  sources = get_target_outputs(":run_soundpool_taihe")
  sources += [
    "media/src/media_taihe_utils.cpp",
    "soundpool/src/ani_constructor.cpp",
    "soundpool/src/sound_pool_taihe.cpp",
    "soundpool/src/sound_pool_callback_taihe.cpp",
  ]

  deps = [
    ":run_soundpool_taihe",
    "//foundation/multimedia/player_framework/interfaces/inner_api/native:media_client",
    "//foundation/multimedia/player_framework/services/utils:media_service_utils",
    "${multimedia_player_framework_path}/frameworks/native/soundpool:soundpool_client",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:ani_base_context",
    "ability_runtime:extensionkit_native",
    "ability_runtime:wantagent_innerkits",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "audio_framework:audio_client",
    "audio_framework:audio_renderer",
    "av_codec:av_codec_client",
    "c_utils:utils",
    "ets_runtime:libark_jsruntime",
    "eventhandler:libeventhandler",
    "graphic_2d:2d_graphics",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image",
    "image_framework:image_native",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "media_foundation:media_foundation",
    "qos_manager:qos",
    "runtime_core:ani",
    "window_manager:libdm",
  ]
}

taihe_shared_library("media_taihe") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  
  taihe_generated_file_path = "${taihe_generated_file_path_media}"
  subsystem_name = "$subsystem_name"
  part_name = "$part_name"

  include_dirs = [
    "media/include",
    "${multimedia_player_framework_path}/services/utils/include",
    "${multimedia_player_framework_path}/interfaces/inner_api/native/",
  ]

  sources = get_target_outputs(":run_media_taihe")
  sources += [
    "media/src/ani_constructor.cpp",
    "media/src/avmetadataextractor_taihe.cpp",
    "media/src/video_recorder_taihe.cpp",
    "media/src/media_taihe_utils.cpp",
    "media/src/recoder_callback_taihe.cpp",
    "media/src/helper_data_source_callback_taihe.cpp",
    "media/src/media_data_source_callback_taihe.cpp",
    "media/src/avimagegenerator_taihe.cpp",
    "media/src/screen_capture_monitor_taihe.cpp",
    "media/src/avrecorder_taihe.cpp",
    "media/src/avtranscoder_taihe.cpp",
    "media/src/avtranscoder_callback_taihe.cpp",
    "media/src/avplayer_callback_taihe.cpp",
    "media/src/avplayer_taihe.cpp",
    "media/src/screen_capture_monitor_callback_taihe.cpp",
    "media/src/avscreen_capture_taihe.cpp",
    "media/src/avscreen_capture_callback_taihe.cpp",
    "media/src/avrecorder_callback_taihe.cpp",
    "media/src/media_source_taihe.cpp",
    "media/src/media_source_loading_request_taihe.cpp",
    "media/src/media_source_loader_callback_taihe.cpp",
  ]

  deps = [
    ":run_media_taihe",
    ":soundpool_taihe",
    "//foundation/multimedia/player_framework/interfaces/inner_api/native:media_client",
    "//foundation/multimedia/player_framework/services/utils:media_service_utils",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "audio_framework:audio_client",
    "audio_framework:audio_renderer",
    "av_codec:av_codec_client",
    "c_utils:utils",
    "ets_runtime:libark_jsruntime",
    "eventhandler:libeventhandler",
    "graphic_2d:2d_graphics",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image",
    "image_framework:image_native",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "media_foundation:media_foundation",
    "qos_manager:qos",
    "runtime_core:ani",
    "window_manager:libdm",
  ]
}

generate_static_abc("media_taihe_abc") {
  base_url = "${taihe_generated_file_path_media}"
  files = [ "${taihe_generated_file_path_media}/@ohos.multimedia.media.ets" ]
  is_boot_abc = "True"
  device_dst_file = "/system/framework/media_taihe_abc.abc"
  dependencies = [ ":run_media_taihe" ]
}

ohos_prebuilt_etc("media_taihe_etc") {
  source = "$target_out_dir/media_taihe_abc.abc"
  module_install_dir = "framework"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  deps = [
    ":media_taihe_abc"
  ]
}

generate_static_abc("soundpool_taihe_abc") {
  base_url = "${taihe_generated_file_path_soundPool}"
  files = [ "${taihe_generated_file_path_soundPool}/multimedia.soundPool.ets" ]
  is_boot_abc = "True"
  device_dst_file = "/system/framework/soundpool_taihe_abc.abc"
  dependencies = [ ":run_soundpool_taihe" ]
}

ohos_prebuilt_etc("soundpool_etc") {
  source = "$target_out_dir/soundpool_taihe_abc.abc"
  module_install_dir = "framework"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  deps = [
    ":soundpool_taihe_abc"
  ]
}

group("player_framework_taihe") {
  deps = [
    ":media_taihe",
    ":media_taihe_etc",
    ":soundpool_taihe",
    ":soundpool_etc",
  ]
}