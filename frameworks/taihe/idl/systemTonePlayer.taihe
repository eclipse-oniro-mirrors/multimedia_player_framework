/*
 * Copyright (C) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@!namespace("multimedia.systemTonePlayer")

@!sts_inject("""
import { BusinessError } from '@ohos.base';
""")

@!sts_inject("""
{ loadLibrary("system_sound_manager_taihe.z"); }
""")

from ohos.multimedia.systemSoundManager use ToneHapticsFeature;

interface SystemTonePlayer {
  @gen_promise("getTitle")
  GetTitleSync(): String;

  SetAudioVolumeScale(scale: f64): void;

  GetAudioVolumeScale(): f64;

  @gen_promise("getSupportedHapticsFeatures")
  GetSupportedHapticsFeaturesSync(): Array<ToneHapticsFeature>;

  SetHapticsFeature(hapticsFeature: ToneHapticsFeature): void;

  GetHapticsFeature(): ToneHapticsFeature;

  @gen_promise("prepare")
  PrepareSync(): void;

  @gen_promise("start")
  StartSync(toneOptions: Optional<SystemToneOptions>): i32;

  @gen_promise("stop")
  StopSync(id: i32): void;

  @gen_promise("release")
  ReleaseSync(): void;

  OnPlayFinished(streamId: i32, callback: (data: i32)=> void): void;
  OffPlayFinished(callback: Optional<(data: i32)=> void>): void;

  OnError(callback: (err: @sts_type("BusinessError<void>") Opaque)=> void): void;
  OffError(callback: Optional<(err: @sts_type("BusinessError<void>") Opaque)=> void>): void;
}

struct SystemToneOptions {
  muteAudio: Optional<bool>;
  muteHaptics: Optional<bool>;
}