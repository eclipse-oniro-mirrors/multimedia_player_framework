# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/player_framework/config.gni")

module_output_path = "player_framework/recorder"

ohos_unittest("recorder_unit_test") {
  module_out_path = module_output_path
  include_dirs = [
    "./include",
    "//foundation/multimedia/player_framework/interfaces/inner_api/native",
    "//foundation/multimedia/player_framework/frameworks/native/recorder",
    "//foundation/multimedia/player_framework/test/unittest/common/include",
  ]

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  cflags = [
    "-Wall",
    "-Werror",
  ]

  if (player_framework_support_recorder) {
    sources = [
      "src/recorder_mock.cpp",
      "src/recorder_unit_test.cpp",
    ]
  }

  deps = [
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "//foundation/multimedia/player_framework/interfaces/inner_api/native:media_client",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:data_ability_helper",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "drivers_interface_display:libdisplay_composer_hdi_impl",
    "graphic_surface:surface",
    "graphic_surface:sync_fence",
    "hilog:libhilog",
  ]

  if (defined(global_parts_info) &&
      defined(global_parts_info.multimedia_histreamer_ext)) {
    defines = [ "SUPPORT_CODEC_TYPE_HEVC" ]
  }

  resource_config_file = "//foundation/multimedia/player_framework/test/unittest/resources/ohos_test.xml"
}
