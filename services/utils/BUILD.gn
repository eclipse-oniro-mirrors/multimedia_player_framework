# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/player_framework/config.gni")

config("media_service_utils_public_config") {
  include_dirs = [ "include" ]
}

ohos_shared_library("media_service_utils") {
  branch_protector_ret = "pac_ret"
  install_enable = true

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  sources = [
    "avdatasrcmemory.cpp",
    "media_dfx.cpp",
    "media_permission.cpp",
    "media_utils.cpp",
    "player_xcollie.cpp",
    "task_queue.cpp",
    "time_format_utils.cpp",
    "uri_helper.cpp",
    "watchdog.cpp",
    "xml_parse.cpp",
  ]

  include_dirs = [
    "//foundation/multimedia/player_framework/interfaces/inner_api/native",
    "$MEDIA_PLAYER_ROOT_DIR/services/services/engine_intf",
  ]

  defines = [ "MEDIA_OHOS" ]
  defines += player_framework_defines
  if (is_emulator) {
    defines += [ "EMULATOR_ENABLED" ]
  }

  if (is_arkui_x) {
    defines += [ "CROSS_PLATFORM" ]
  }

  cflags = [
    "-std=c++17",
    "-fno-rtti",
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-Wshadow",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wdate-time",
    "-Werror",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wunused-parameter",
  ]

  configs = [ ":media_service_utils_public_config" ]

  public_external_deps = []
  if (!is_arkui_x) {
    public_external_deps += [ "json:nlohmann_json_static" ]
  }

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libprivacy_sdk",
    "av_codec:av_codec_client",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "graphic_surface:surface",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "hitrace:libhitracechain",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libxml2:libxml2",
    "media_foundation:media_foundation",
    "qos_manager:qos",
    "samgr:samgr_proxy",
  ]

  subsystem_name = "multimedia"
  innerapi_tags = [ "platformsdk" ]
  part_name = "player_framework"
}
